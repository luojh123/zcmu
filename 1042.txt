#include<iostream>  
using namespace std;  
int main()  
{  
    long long n;  
    while(cin>>n)  
    {  
		long long ans = 0;  
		if ( n%3==0 )  
		{  
			ans = n/3*2;  
		}  
		else  
		{  
			ans = n/3*2+n%3-1;  
		}  
		cout<<ans<<endl;   
	}  
	return 0;  
} 
 
有数列1，12,123,1234，...12345678901...求从1到N位的这个数种，有几个这样的数能被3整除
样例理解： 12%3=0 123%3=0  output： 2


长度   数  数%3    长%3
1      1   1        1
2      12   0         2
3      123   0         0
4      1234   1         1
5      12345   0         2
6      123456   0         0
7      1234567   1         1
8      12345678   0         2
9      123456789   0         0
然后就找规律了...对于n，n/3*2能得到初步的被3整除的数的个数，如果n%3==2，再加一个