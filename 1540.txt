#include<algorithm>
#include<stdio.h>
#include <iostream>
using namespace std;
template<class T>inline T read(T&x)
{
    char c;
    while((c=getchar())<=32)if(c==EOF)return 0;
    bool ok=false;
    if(c=='-')ok=true,c=getchar();
    for(x=0; c>32; c=getchar())
        x=x*10+c-'0';
    if(ok)x=-x;
    return 1;
}
template<class T> inline T read_(T&x,T&y)
{
    return read(x)&&read(y);
}
template<class T> inline T read__(T&x,T&y,T&z)
{
    return read(x)&&read(y)&&read(z);
}
template<class T> inline void write(T x)
{
    if(x<0)putchar('-'),x=-x;
    if(x<10)putchar(x+'0');
    else write(x/10),putchar(x%10+'0');
}
template<class T>inline void writeln(T x)
{
    write(x);
    putchar('\n');
}
//-------ZCC IO template------
const int maxn=1e5+1;
const double inf=999999999;
#define lson (rt<<1),L,M
#define rson (rt<<1|1),M+1,R
#define M ((L+R)>>1)
#define For(i,t,n) for(int i=(t);i<(n);i++)
typedef long long  LL;
typedef double DB;
typedef pair<int,int> P;
#define bug printf("---\n");
#define mod  1000000007
 
int a[maxn],b[maxn];
int n,m,k;
 
bool pan(LL num)
{
    int cnt=0;
    for(int i=0;i<n;i++)
        cnt+=m-(upper_bound(b,b+m,num/a[i])-b);//查找是否比num大的元素的个数
   // printf("num=%lld  cnt=%d\n",num,cnt);
    return cnt>k-1;
}
 
void slove()
{
    LL l=(LL)a[0]*b[0];
    LL h=(LL)a[n-1]*b[m-1];//在最大最小值之间二分答案
    while(l<=h)
    {
        LL mid=(LL)(l+h)/2;
        if(pan(mid))
            l=mid+1;
        else
            h=mid-1;
    }
    writeln(l);
}
 
int main()
{
    int T;
    //freopen("in.txt","r",stdin);
    read(T);
    while(T--)
    {
        read__(n,m,k);
        For(i,0,n)read(a[i]);
        For(i,0,m)read(b[i]);
        sort(a,a+n);
        sort(b,b+m);
        slove();
    }
    return 0;
}