#include <iostream>
#include <cstring>
using namespace std;

long long dp[22][3];
int bit[21];
long long n;
 
void init()
{
    dp[0][0]=1,dp[0][1]=0,dp[0][2]=0;
    for(int i=1;i<=21;i++)
    {
        dp[i][0]=dp[i-1][0]*10-dp[i-1][1];
        dp[i][1]=dp[i-1][0];
        dp[i][2]=dp[i-1][2]*10+dp[i-1][1];
    }
}
 
long long cal(long long n)
{
    int len=0;
    while(n)
    {
        bit[++len]=n%10;
        n/=10;
    }
    long long ans=0;
    bit[len+1]=0;
    bool has=false;
    for(int i=len;i>=1;i--)
    {
        ans+=dp[i-1][2]*bit[i];
        if(!has)
        {
            if(bit[i]>4)
                ans+=dp[i-1][1];
        }
        else
            ans+=(dp[i-1][0])*bit[i];
        if(bit[i+1]==4&&bit[i]==9)
           has=true;
    }
    if(has)
        ans++;
    return ans;
}
 
int main()
{
    init();
    int t;cin>>t;
    while(t--)
    {
        cin>>n;
        cout<<cal(n)<<endl;
	}
	return 0;
}
